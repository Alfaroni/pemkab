@import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap');

$color-white: #FFFFFF
$color-black: #000000
$color-gray: #999999
$color-primary: #131D38
$color-primary-80: #1A2950
$color-primary-60: #1f2e59
$color-primary-40: #586B9E
$color-primary-20: #798CC0
$color-primary-red: #E81F28
$color-primary-red-80: darken($color-primary-red, 20%)
$color-primary-blue: #018DD5
$color-primary-blue-80: darken($color-primary-blue, 20%)
$color-primary-maroon: #CE2258
$color-primary-maroon-80: darken($color-primary-maroon, 20%)
$color-primary-yellow: #FEAA3A
$color-primary-yellow-80: darken($color-primary-yellow, 20%)
$color-primary-orange: #FD6041
$color-primary-orange-80: darken($color-primary-orange, 20%)
$color-primary-tosca: #2DA4A8
$color-primary-tosca-80: darken($color-primary-tosca, 20%)
$color-primary-green: #0E3755
$color-primary-green-80: darken($color-primary-green, 20%)


\:root
    --color-white: #{$color-white}
    --color-black: #{$color-black}
    --color-gray: #{$color-gray}
    --color-primary: #{$color-primary}
    --color-primary-80: #{$color-primary-80}
    --color-primary-60: #{$color-primary-60}
    --color-primary-40: #{$color-primary-40}
    --color-primary-20: #{$color-primary-20}
    --color-primary-red: #{$color-primary-red}
    --color-primary-red-80: #{$color-primary-red-80}
    --color-primary-blue: #{$color-primary-blue}
    --color-primary-blue-80: #{$color-primary-blue-80}
    --color-primary-maroon: #{$color-primary-maroon}
    --color-primary-maroon-80: #{$color-primary-maroon-80}
    --color-primary-yellow: #{$color-primary-yellow}
    --color-primary-yellow-80: #{$color-primary-yellow-80}
    --color-primary-orange: #{$color-primary-orange}
    --color-primary-orange-80: #{$color-primary-orange-80}
    --color-primary-tosca: #{$color-primary-tosca}
    --color-primary-tosca-80: #{$color-primary-tosca-80}
    --color-primary-green: #{$color-primary-green}
    --color-primary-green-80: #{$color-primary-green-80}
    --font-primary: 'Montserrat', sans-serif

@-ms-viewport
    width: device-width

small 
    font-size: 60%

.aspect 
    &-video 
        aspect-ratio: 16 / 9

html, body 
    height: 100%
    min-height: 100%

body
    position: relative
    font-family: var(--font-primary)
    overflow-x: hidden

//form
.form 
    &-control 
        outline: none
        resize: none
        width: 100%
        font-family: inherit
        &::placeholder
            color: var(--color-gray)

.from
    &-primary 
        --tw-gradient-from: darken($color-primary, 20%)
        --tw-gradient-to: $color-primary-80
        --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to, rgba(0,0,0, 0))
        &-gray 
            --tw-gradient-from: #B9BFCC
            --tw-gradient-to: #CCD3DD
            --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to, rgba(0,0,0, 0))
        &-maroon
            --tw-gradient-from: $color-primary-maroon
            --tw-gradient-to: $color-primary-maroon-80
            --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to, rgba(0,0,0, 0))
        &-red 
            --tw-gradient-from: $color-primary-red
            --tw-gradient-to: $color-primary-red-80
            --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to, rgba(0,0,0, 0))
        &-blue 
            --tw-gradient-from: $color-primary-blue
            --tw-gradient-to: $color-primary-blue-80
            --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to, rgba(0,0,0, 0))
        &-yellow 
            --tw-gradient-from: $color-primary-yellow
            --tw-gradient-to: $color-primary-yellow-80
            --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to, rgba(0,0,0, 0))
        &-orange 
            --tw-gradient-from: $color-primary-orange
            --tw-gradient-to: $color-primary-orange-80
            --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to, rgba(0,0,0, 0))
        &-tosca 
            --tw-gradient-from: $color-primary-tosca
            --tw-gradient-to: $color-primary-tosca-80
            --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to, rgba(0,0,0, 0))
        &-green 
            --tw-gradient-from: $color-primary-green
            --tw-gradient-to: $color-primary-green-80
            --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to, rgba(0,0,0, 0))
        
    
//bg
$color: 4
.bg
    &-full 
        background-size: 100% 100%
    &-current 
        background-color: inherit
    &-primary 
        background-color: var(--color-primary)
        &-red 
            background-color: var(--color-primary-red)
        &-blue 
            background-color: var(--color-primary-blue)
        &-maroon 
            background-color: var(--color-primary-maroon)
        &-yellow 
            background-color: var(--color-primary-yellow)
        &-orange 
            background-color: var(--color-primary-orange)
        &-tosca 
            background-color: var(--color-primary-tosca)
        &-green 
            background-color: var(--color-primary-green)
        @for $i from 1 through $color
            &-#{$i*20}
                background-color: var(--color-primary-#{$i*20})
//text
.text
    &-current 
        color: inherit
    &-primary
        color: var(--color-primary)
        &-red 
            color: var(--color-primary-red)
            &-80
                color: var(--color-primary-red-80)
        &-blue 
            color: var(--color-primary-blue)
            &-80
                color: var(--color-primary-blue-80)
        &-maroon 
            color: var(--color-primary-maroon)
            &-80
                color: var(--color-primary-maroon-80)
        &-yellow 
            color: var(--color-primary-yellow)
            &-80
                color: var(--color-primary-yellow-80)
        &-orange 
            color: var(--color-primary-orange)
            &-80
                color: var(--color-primary-orange-80)
        &-tosca 
            color: var(--color-primary-tosca)
            &-80
                color: var(--color-primary-tosca-80)
        &-green 
            color: var(--color-primary-green)
            &-80
                color: var(--color-primary-green-80)
        @for $i from 1 through $color
            &-#{$i*20}
                color: var(--color-primary-#{$i*20})
                
//border
.border
    &-l-transparent
        border-left-color: transparent
    &-r-transparent
        border-right-color: transparent
    &-t-transparent
        border-top-color: transparent
    &-b-transparent
        border-bottom-color: transparent
    &-y-transparent
        border-top-color: transparent
        border-bottom-color: transparent
    &-x-transparent
        border-left-color: transparent
        border-right-color: transparent
    &-current 
        border-color: inherit
    &-gradient 
        border-color: transparent
        background-image: linear-gradient($color-white, $color-white), linear-gradient(90deg, rgba($color-primary-blue,1) 0%, rgba($color-primary-red,1) 100%)
        background-origin: border-box
        background-clip: content-box, border-box
        overflow: hidden
    &-primary 
        border-color: var(--color-primary)
        &-red 
            border-color: var(--color-primary-red)
        &-blue 
            border-color: var(--color-primary-blue)
        &-maroon 
            border-color: var(--color-primary-maroon)
        &-yellow 
            border-color: var(--color-primary-yellow)
        &-orange 
            border-color: var(--color-primary-orange)
        &-tosca 
            border-color: var(--color-primary-tosca)
        &-green 
            border-color: var(--color-primary-green)
        @for $i from 1 through $color
            &-#{$i*20}
                border-color: var(--color-primary-#{$i*20})

//bg-opacity    
$opacity: 10
@for $i from 1 through $opacity
    $opacity: $i * .1
    .bg-primary-80\/#{$i * 10}
        background-color: rgba($color-primary-80, $opacity)

//hover    
.hover\:
    &bg-primary
        &-dark:hover
            background-color: darken($color-primary-80, 10%) 
        &-light:hover
            background-color: lighten($color-primary-80, 10%) 


//snap
.snap
    &-mandatory	
        --tw-scroll-snap-strictness: mandatory
    &-proximity	
        --tw-scroll-snap-strictness: proximity
    &-none 
        scroll-snap-type: none
    &-y
        scroll-snap-type: y var(--tw-scroll-snap-strictness)
    &-x
        scroll-snap-type: x var(--tw-scroll-snap-strictness)
    &-both 
        scroll-snap-type: both var(--tw-scroll-snap-strictness)
    &-y, &-x
        -ms-overflow-style: none
        scrollbar-width: none
        &::-webkit-scrollbar
            display: none
    &-always
        scroll-snap-stop: always
    &-normal 
        scroll-snap-stop: normal
    &-start
        scroll-snap-align: start
    &-center
        scroll-snap-align: center 
    &-end 
        scroll-snap-align: end 
    &-align-none 
        scroll-snap-align: none

//scroll
.scroll-smooth
    scroll-behavior: smooth
    -webkit-overflow-scrolling: touch

//shrink
.shrink
    flex-shrink: 1
    &-0
        flex-shrink: 0

//z-index
.-z-1
    z-index: -1

//trigger
[data-toggle-open],
[data-dropdown-open]
    transition: .3s ease
    &.open 
        opacity: 1
        display: block
        pointer-events: auto
        &.fixed.-translate-x-full,
        &.fixed.translate-x-full
            transform: translateX(0)

//shadow 
.shadow
    &-xxl 
        box-shadow: 0px 5px 5px 0px rgba($color-black,.5)
    &-inset
        &-xl
            box-shadow: inset 0px 5px 5px 5px rgba($color-black,.5)

//grid    
$grid: ("md": 768px, "lg": 1024px, "xl": 1200px)
@each $grid, $i in $grid
    @media(min-width:$i)
        .#{$grid}\:
            &bg
                &-current 
                    background-color: inherit
                &-primary
                    background-color: var(--color-primary)
                    @for $i from 1 through $color
                        &-#{$i*20}
                            background-color: var(--color-primary-#{$i*20})
            &text
                &-current 
                    color: inherit
                &-primary
                    color: var(--color-primary)
                    @for $i from 1 through $color
                        &-#{$i*20}
                            color: var(--color-primary-#{$i*20})
            
            &border
                &-current 
                    border-color: inherit
                &-primary 
                    border-color: var(--color-primary)
                    @for $i from 1 through $color
                        &-#{$i*20}
                            border-color: var(--color-primary-#{$i*20})


    


        



